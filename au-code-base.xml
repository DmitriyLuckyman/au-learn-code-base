<?xml version="1.0" encoding="UTF-8"?>
<project name="au-code-base" default="all">
  
  
  <property file="au-code-base.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/access-bridge-32.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  <import file="${basedir}/java/HW1/module_hw1.xml"/>
  
  <import file="${basedir}/java/HW2/module_hw2.xml"/>
  
  <import file="${basedir}/java/HW3/module_hw3.xml"/>
  
  <import file="${basedir}/java/HW3-2013/module_hw3-2013.xml"/>
  
  <import file="${basedir}/java/HW4/module_hw4.xml"/>
  
  <import file="${basedir}/java/HW5/module_hw5.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.hw1, clean.module.hw2, clean.module.hw3, clean.module.hw3-2013, clean.module.hw4, clean.module.hw5" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.hw1, compile.module.hw2, compile.module.hw3, compile.module.hw3-2013, compile.module.hw4, compile.module.hw5" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.task2" value="${basedir}/out/artifacts/Task2"/>
    <property name="artifact.output.task3" value="${basedir}/out/artifacts/Task3"/>
    <property name="artifact.output.task4" value="${basedir}/out/artifacts/Task4"/>
    <property name="artifact.output.task5" value="${basedir}/out/artifacts/Task5"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.HW2.jar" value="${artifacts.temp.dir}/HW2.jar"/>
    <property name="temp.jar.path.Task3.jar" value="${artifacts.temp.dir}/Task3.jar"/>
    <property name="temp.jar.path.Task4.jar" value="${artifacts.temp.dir}/Task4.jar"/>
    <property name="temp.jar.path.Task5.jar" value="${artifacts.temp.dir}/Task5.jar"/>
  </target>
  
  <target name="artifact.task2" depends="init.artifacts" description="Build &#39;Task2&#39; artifact">
    <property name="artifact.temp.output.task2" value="${artifacts.temp.dir}/Task2"/>
    <mkdir dir="${artifact.temp.output.task2}"/>
    <jar destfile="${temp.jar.path.HW2.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset file="${basedir}/java/HW1/META-INF/MANIFEST.MF" prefix="META-INF"/>
      <zipfileset dir="${basedir}/java/HW2/src"/>
    </jar>
    <copy file="${temp.jar.path.HW2.jar}" tofile="${artifact.temp.output.task2}/HW2.jar"/>
  </target>
  
  <target name="artifact.task3" depends="init.artifacts" description="Build &#39;Task3&#39; artifact">
    <property name="artifact.temp.output.task3" value="${artifacts.temp.dir}/Task3"/>
    <mkdir dir="${artifact.temp.output.task3}"/>
    <jar destfile="${temp.jar.path.Task3.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${basedir}/java/HW3-2013/src" prefix="ru.spbau.bandurin.task3"/>
      <zipfileset file="${basedir}/java/HW3-2013/META-INF/MANIFEST.MF" prefix="META-INF"/>
    </jar>
    <copy file="${temp.jar.path.Task3.jar}" tofile="${artifact.temp.output.task3}/Task3.jar"/>
  </target>
  
  <target name="artifact.task4" depends="init.artifacts" description="Build &#39;Task4&#39; artifact">
    <property name="artifact.temp.output.task4" value="${artifacts.temp.dir}/Task4"/>
    <mkdir dir="${artifact.temp.output.task4}"/>
    <jar destfile="${temp.jar.path.Task4.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${basedir}/java/HW4/src"/>
      <zipfileset file="${basedir}/java/HW4/META-INF/MANIFEST.MF" prefix="META-INF"/>
    </jar>
    <copy file="${temp.jar.path.Task4.jar}" tofile="${artifact.temp.output.task4}/Task4.jar"/>
  </target>
  
  <target name="artifact.task5" depends="init.artifacts" description="Build &#39;Task5&#39; artifact">
    <property name="artifact.temp.output.task5" value="${artifacts.temp.dir}/Task5"/>
    <mkdir dir="${artifact.temp.output.task5}"/>
    <jar destfile="${temp.jar.path.Task5.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${basedir}/java/HW5/src"/>
      <zipfileset dir="${basedir}/java/HW5/test"/>
    </jar>
    <copy file="${temp.jar.path.Task5.jar}" tofile="${artifact.temp.output.task5}/Task5.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.task2, artifact.task3, artifact.task4, artifact.task5" description="Build all artifacts">
    <mkdir dir="${artifact.output.task2}"/>
    <copy todir="${artifact.output.task2}">
      <fileset dir="${artifact.temp.output.task2}"/>
    </copy>
    <mkdir dir="${artifact.output.task3}"/>
    <copy todir="${artifact.output.task3}">
      <fileset dir="${artifact.temp.output.task3}"/>
    </copy>
    <mkdir dir="${artifact.output.task4}"/>
    <copy todir="${artifact.output.task4}">
      <fileset dir="${artifact.temp.output.task4}"/>
    </copy>
    <mkdir dir="${artifact.output.task5}"/>
    <copy todir="${artifact.output.task5}">
      <fileset dir="${artifact.temp.output.task5}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>